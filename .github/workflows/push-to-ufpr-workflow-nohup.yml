name: Push-to-UFPR-server-nohup

# Alternative workflow using nohup to prevent SSH disconnection issues
on:
  workflow_dispatch:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: üîÑ Checkout do C√≥digo
        uses: actions/checkout@v3

      - name: üîë Configurar SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.SSH_HOST }} >> ~/.ssh/known_hosts

      - name: üöÄ Deploy com nohup (background)
        run: |
          ssh -o ServerAliveInterval=60 -o ServerAliveCountMax=10 root@${{ secrets.SSH_HOST }} << 'EOF'
            cd portal-da-classe-politica
            source ~/.bashrc
            
            echo "üîÑ Fetching latest code..."
            git reset --hard
            git pull origin main
            
            # Set up environment variables
            if [ ! -f ".env.production" ]; then
              echo "‚ö†Ô∏è  .env.production not found, creating from example..."
              cp .env.production.example .env.production || echo "No .env.production.example found"
            fi
            
            # Make scripts executable
            chmod +x deploy.sh deploy-fast.sh
            
            # Create unique deployment ID
            DEPLOY_ID="deploy_$(date +%Y%m%d_%H%M%S)"
            DEPLOY_LOG="${DEPLOY_ID}.log"
            DEPLOY_STATUS="${DEPLOY_ID}.status"
            
            echo "üìù Starting background deployment: $DEPLOY_ID"
            echo "üìã Log file: $DEPLOY_LOG"
            
            # Run deployment in background with nohup
            nohup bash -c "
              echo 'RUNNING' > '$DEPLOY_STATUS'
              echo 'üöÄ Starting deployment at: $(date)' >> '$DEPLOY_LOG'
              
              if ./deploy.sh >> '$DEPLOY_LOG' 2>&1; then
                echo 'SUCCESS' > '$DEPLOY_STATUS'
                echo '‚úÖ Deployment completed successfully at: $(date)' >> '$DEPLOY_LOG'
              else
                echo 'FAILED' > '$DEPLOY_STATUS'
                echo '‚ùå Deployment failed at: $(date)' >> '$DEPLOY_LOG'
              fi
            " > /dev/null 2>&1 &
            
            DEPLOY_PID=$!
            echo "üîÑ Deployment started with PID: $DEPLOY_PID"
            echo "üìä Initial status check..."
            
            # Wait a bit and check if process started successfully
            sleep 5
            if kill -0 $DEPLOY_PID 2>/dev/null; then
              echo "‚úÖ Deployment process is running"
              echo "üìã You can monitor progress with:"
              echo "   tail -f $DEPLOY_LOG"
              echo "   cat $DEPLOY_STATUS"
            else
              echo "‚ùå Deployment process failed to start"
              cat $DEPLOY_LOG 2>/dev/null || echo "No log file found"
              exit 1
            fi
          EOF

      - name: üîç Verificar status do deploy
        run: |
          echo "‚è≥ Waiting for deployment to complete..."
          ssh root@${{ secrets.SSH_HOST }} << 'EOF'
            cd portal-da-classe-politica
            
            # Find the most recent deploy status file
            LATEST_STATUS=$(ls -t deploy_*.status 2>/dev/null | head -1)
            LATEST_LOG=$(echo $LATEST_STATUS | sed 's/\.status$/.log/')
            
            if [ -z "$LATEST_STATUS" ]; then
              echo "‚ùå No deployment status file found"
              exit 1
            fi
            
            echo "üìã Monitoring deployment: $LATEST_STATUS"
            
            # Wait for deployment to complete (max 15 minutes)
            for i in {1..90}; do
              if [ -f "$LATEST_STATUS" ]; then
                STATUS=$(cat "$LATEST_STATUS")
                echo "üîÑ Status check $i/90: $STATUS"
                
                case "$STATUS" in
                  "SUCCESS")
                    echo "‚úÖ Deployment completed successfully!"
                    echo "üìã Final log:"
                    tail -20 "$LATEST_LOG" 2>/dev/null || echo "No log available"
                    exit 0
                    ;;
                  "FAILED")
                    echo "‚ùå Deployment failed!"
                    echo "üìã Error log:"
                    tail -20 "$LATEST_LOG" 2>/dev/null || echo "No log available"
                    exit 1
                    ;;
                  "RUNNING")
                    echo "‚è≥ Still running... (waiting 10s)"
                    sleep 10
                    ;;
                  *)
                    echo "‚ùì Unknown status: $STATUS"
                    sleep 10
                    ;;
                esac
              else
                echo "‚ùå Status file disappeared"
                exit 1
              fi
            done
            
            echo "‚è∞ Deployment timeout after 15 minutes"
            echo "üìã Last log entries:"
            tail -20 "$LATEST_LOG" 2>/dev/null || echo "No log available"
            exit 1
          EOF