name: Push-to-UFPR-server

# Trigger deployment only on push to main branch
on:
  workflow_dispatch:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: üîÑ Checkout do C√≥digo
        uses: actions/checkout@v3

      - name: üîë Configurar SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.SSH_HOST }} >> ~/.ssh/known_hosts

      - name: üöÄ Zero-Downtime Deploy no servidor
        run: |
          ssh -o ServerAliveInterval=30 -o ServerAliveCountMax=3 -o ConnectTimeout=10 root@${{ secrets.SSH_HOST }} << 'EOF'
            set -e  # Exit on any error
            
            cd portal-da-classe-politica
            source ~/.bashrc
            
            echo "üîÑ Fetching latest code..."
            git reset --hard
            git pull origin main

            echo "üõ†Ô∏è  Environment check..."
            echo "Node: $(node -v)"
            echo "Npm: $(npm -v)"
            
            # Set up environment variables
            if [ ! -f ".env.production" ]; then
              echo "‚ö†Ô∏è  .env.production not found, creating from example..."
              cp .env.production.example .env.production || echo "No .env.production.example found"
            fi
            
            # Make deploy script executable
            chmod +x deploy.sh deploy-fast.sh
            
            # Create deployment log
            DEPLOY_LOG="deploy_$(date +%Y%m%d_%H%M%S).log"
            echo "üìù Logging deployment to: $DEPLOY_LOG"
            
            # Run zero-downtime deployment with logging and keep-alive
            echo "üöÄ Starting zero-downtime deployment..."
            (
              # Keep SSH connection alive during long operations
              while true; do
                echo "‚è±Ô∏è  Deploy in progress... $(date)"
                sleep 30
              done &
              KEEPALIVE_PID=$!
              
              # Run deployment
              ./deploy.sh 2>&1 | tee "$DEPLOY_LOG"
              DEPLOY_EXIT_CODE=${PIPESTATUS[0]}
              
              # Stop keep-alive
              kill $KEEPALIVE_PID 2>/dev/null || true
              
              # Check deployment result
              if [ $DEPLOY_EXIT_CODE -eq 0 ]; then
                echo "‚úÖ Zero-downtime deployment completed successfully!"
              else
                echo "‚ùå Deployment failed with exit code: $DEPLOY_EXIT_CODE"
                echo "üìã Last 20 lines of deployment log:"
                tail -20 "$DEPLOY_LOG"
                exit $DEPLOY_EXIT_CODE
              fi
            )
          EOF
